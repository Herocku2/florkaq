version: '3.8'

services:
  # Base de datos PostgreSQL (alternativa a SQLite para producción)
  postgres:
    image: postgres:15
    container_name: florkafun-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: florkafun
      POSTGRES_USER: florkafun_user
      POSTGRES_PASSWORD: florkafun_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - florkafun-network

  # Adminer para gestión de base de datos
  adminer:
    image: adminer:latest
    container_name: florkafun-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - florkafun-network

  # Backend Strapi
  strapi:
    image: node:18
    container_name: florkafun-strapi
    restart: unless-stopped
    working_dir: /srv/app
    volumes:
      - ./backend:/srv/app:cached
      - strapi-uploads:/srv/app/public/uploads
      - strapi-node-modules:/srv/app/node_modules
    ports:
      - "1337:1337"
    environment:
      - DATABASE_CLIENT=sqlite
      - DATABASE_FILENAME=.tmp/data.db
      - APP_KEYS=florkafun1,florkafun2,florkafun3,florkafun4
      - API_TOKEN_SALT=florkafunsalt123456789
      - ADMIN_JWT_SECRET=florkafunadminjwtsecret
      - JWT_SECRET=florkafunjwtsecret
      - TRANSFER_TOKEN_SALT=florkafuntransfersalt123456789
      - NODE_ENV=development
      - STRAPI_TELEMETRY_DISABLED=true
      - HOST=0.0.0.0
      - PORT=1337
    command: >
      bash -c "
        npm install
        npm run develop
      "
    depends_on:
      - postgres
    networks:
      - florkafun-network

  # Frontend React
  frontend:
    image: node:18
    container_name: florkafun-frontend
    restart: unless-stopped
    working_dir: /app
    volumes:
      - .:/app:cached
      - frontend-node-modules:/app/node_modules
    ports:
      - "5173:5173"
    command: >
      bash -c "
        npm install
        npm run dev -- --host 0.0.0.0
      "
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:1337
    depends_on:
      - strapi
    networks:
      - florkafun-network

  # PostgREST API (opcional para APIs REST directas)
  postgrest:
    image: postgrest/postgrest:latest
    container_name: florkafun-postgrest
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      PGRST_DB_URI: postgres://florkafun_user:florkafun_password@postgres:5432/florkafun
      PGRST_DB_SCHEMAS: public
      PGRST_DB_ANON_ROLE: florkafun_user
      PGRST_JWT_SECRET: florkafunjwtsecretthisissuperlongandhas32characters
    depends_on:
      - postgres
    networks:
      - florkafun-network

  # Redis para caché y sesiones
  redis:
    image: redis:7-alpine
    container_name: florkafun-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - florkafun-network

volumes:
  postgres-data:
  strapi-uploads:
  redis-data:
  strapi-node-modules:
  frontend-node-modules:

networks:
  florkafun-network:
    driver: bridge